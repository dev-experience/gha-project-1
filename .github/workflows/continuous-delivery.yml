name: Continuous Delivery

on:
  workflow_dispatch:
  push:
  pull_request:
    types: [ closed ]

concurrency:
  # https://docs.github.com/en/actions/learn-github-actions/variables
  group: ${{ github.workflow_ref }}
  cancel-in-progress: true

jobs:

  # docker-build:
  #   name: CI - Build Docker image
  #   if: github.ref != 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   steps:

  #     - uses: actions/checkout@v3

  #     - name: Build the Docker image
  #       working-directory: ./src
  #       run: docker build . --build-arg REPOSITORY_URL="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}" --tag ticketless-flow-app:$(date +%s) --tag ticketless-flow-app:latest

  # run-unit-tests:
  #   name: CI - Run Unit Tests
  #   runs-on: ubuntu-latest
  #   permissions:
  #     checks: write
  #     contents: write
  #     pull-requests: write
  #   steps:

  #     - uses: actions/checkout@v3

  #     - name: Run Unit Tests
  #       working-directory: ./src
  #       run: |
  #         docker build . --target unit-tests-runner --tag ticketless-flow-app-unit-tests:latest
  #         mkdir test_results
  #         docker run --mount type=bind,source="./test_results",target="/src/test_results" ticketless-flow-app-unit-tests:latest

  #     - name: Create test report
  #       uses: dorny/test-reporter@v1
  #       if: ${{ !cancelled() }}
  #       with:
  #         name: Unit Tests report
  #         path: "./src/test_results/*.trx"
  #         reporter: dotnet-trx
  #         fail-on-error: true

  # run-integration-tests:
  #   name: CI - Run Integration Tests
  #   runs-on: ubuntu-latest
  #   permissions:
  #     checks: write
  #     contents: write
  #     pull-requests: write
  #   steps:

  #     - uses: actions/checkout@v3

  #     - name: Run Integration Tests
  #       working-directory: ./src
  #       run: |
  #         docker build . --target integration-tests-runner --tag ticketless-flow-app-integration-tests:latest
  #         mkdir test_results
  #         docker run --mount type=bind,source="./test_results",target="/src/test_results" ticketless-flow-app-integration-tests:latest

  #     - name: Create test report
  #       uses: dorny/test-reporter@v1
  #       if: ${{ !cancelled() }}
  #       with:
  #         name: Integration Tests report
  #         path: "./src/test_results/*.trx"
  #         reporter: dotnet-trx
  #         fail-on-error: true

  # docker-build-and-push:
  #   name: CI - Build and push Docker image
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   needs:
  #     - run-unit-tests
  #     - run-integration-tests
  #   # https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs
  #   permissions:
  #     contents: read
  #     packages: write
  #   steps:

  #     - uses: actions/checkout@v3

  #     - name: Build Docker image
  #       working-directory: ./src
  #       run: |
  #         docker build . \
  #           --build-arg "APP_NAME='Ticketless Flow App'" \
  #           --build-arg "REPOSITORY_URL='${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}'" \
  #           --tag ticketless-flow-app:$(date +%s) \
  #           --tag ticketless-flow-app:latest

  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Push Docker image
  #       run: |
  #         docker tag ticketless-flow-app:latest ghcr.io/dev-experience/ticketless-flow-app:latest
  #         docker push ghcr.io/dev-experience/ticketless-flow-app:latest

  #     - name: Inspect Docker image
  #       run: docker inspect ghcr.io/dev-experience/ticketless-flow-app:latest

  run-terraform-d:
    name: CD - D - Provision infrastructure
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/main'
    # environment: development
    # environment:
    #   name: development
    #   url: https://fn-ticketless-flow-app-d.azurewebsites.net
    # needs:
    #   - docker-build-and-push
    steps:

      - uses: actions/checkout@v3

      # - shell: bash
      #   env:
      #     AZURE_CREDENTIALS: ${{ secrets.AZ_CLIENT }}
      #   run: |
      #     az login --service-principal \
      #       --username "0ab8c2d1-790d-43fd-a66f-27d2604d1f79"
      #       --password "kCf8Q~FwU8DRRBQ3G1--4dbF_tGtuqlCyHLphaYc"
      #       --tenant "f4b1cb88-8d5a-4a14-b76f-f28c8fe984f7"
      #       --allow-no-subscriptions

      - name: Terraform init
        working-directory: ./terraform
        run: terraform init
        env:
          ARM_TENANT_ID: ${{ env.TF_VAR_TENANT_ID }}
          ARM_CLIENT_ID: ${{ env.TF_VAR_AGENT_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.TF_VAR_AGENT_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ env.TF_VAR_SUBSCRIPTION_ID }}

      - name: Terraform validate
        working-directory: ./terraform
        run: terraform validate -var-file="./vars/dev.tfvars"

      - name: Terraform plan
        working-directory: ./terraform
        run: terraform plan -var-file="./vars/dev.tfvars" -out="tfplan"

      - name: Terraform apply
        working-directory: ./terraform
        run: terraform apply "tfplan"
        env:
          TF_VAR_tenant_id: ${{ env.TF_VAR_tenant_id }}
          TF_VAR_agent_client_id: ${{ env.TF_VAR_agent_client_id }}
          TF_VAR_agent_client_secret: ${{ secrets.TF_VAR_agent_client_secret }}
          TF_VAR_subscription_id: ${{ env.TF_VAR_subscription_id }}

      - name: az logout
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az logout
            az cache purge
            az account clear
