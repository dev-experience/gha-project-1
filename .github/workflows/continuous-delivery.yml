name: Continuous Delivery

on:
  workflow_dispatch:
  push:
  pull_request:
    types: [ closed ]

concurrency:
  # https://docs.github.com/en/actions/learn-github-actions/variables
  group: ${{ github.workflow_ref }}
  cancel-in-progress: true

jobs:

  docker-build:
    name: CI - Build Docker image
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3

      - name: Build the Docker image
        working-directory: ./src
        run: docker build . --build-arg REPOSITORY_URL="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}" --tag ticketless-flow-app:$(date +%s) --tag ticketless-flow-app:latest

  run-unit-tests:
    name: CI - Run Unit Tests
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: write
      pull-requests: write
    steps:

      - uses: actions/checkout@v3

      - name: Run Unit Tests
        working-directory: ./src
        run: |
          docker build . --target unit-tests-runner --tag ticketless-flow-app-unit-tests:latest
          mkdir test_results
          docker run --mount type=bind,source="./test_results",target="/src/test_results" ticketless-flow-app-unit-tests:latest

      - name: Create test report
        uses: dorny/test-reporter@v1
        if: ${{ !cancelled() }}
        with:
          name: Unit Tests report
          path: "./src/test_results/*.trx"
          reporter: dotnet-trx
          fail-on-error: true

  run-integration-tests:
    name: CI - Run Integration Tests
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: write
      pull-requests: write
    steps:

      - uses: actions/checkout@v3

      - name: Run Integration Tests
        working-directory: ./src
        run: |
          docker build . --target integration-tests-runner --tag ticketless-flow-app-integration-tests:latest
          mkdir test_results
          docker run --mount type=bind,source="./test_results",target="/src/test_results" ticketless-flow-app-integration-tests:latest

      - name: Create test report
        uses: dorny/test-reporter@v1
        if: ${{ !cancelled() }}
        with:
          name: Integration Tests report
          path: "./src/test_results/*.trx"
          reporter: dotnet-trx
          fail-on-error: true

  docker-build-and-push:
    name: CI - Build and push Docker image
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs:
      - run-unit-tests
      - run-integration-tests
    # https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs
    permissions:
      contents: read
      packages: write
    steps:

      - uses: actions/checkout@v3

      - name: Build Docker image
        working-directory: ./src
        run: |
          docker build . \
            --build-arg "APP_NAME='Ticketless Flow App'" \
            --build-arg "REPOSITORY_URL='${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}'" \
            --tag ticketless-flow-app:$(date +%s) \
            --tag ticketless-flow-app:latest

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image
        run: |
          docker tag ticketless-flow-app:latest ghcr.io/dev-experience/ticketless-flow-app:latest
          docker push ghcr.io/dev-experience/ticketless-flow-app:latest

      - name: Inspect Docker image
        run: docker inspect ghcr.io/dev-experience/ticketless-flow-app:latest

  run-deploy-t:
    name: CD - T - Deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: Test
      url: https://func-cu-ticketless-flow-t.azurewebsites.net
    needs:
      - docker-build-and-push
    steps:

      - uses: actions/checkout@v3

      - name: Terraform init
        working-directory: ./terraform
        run: terraform init
        env:
          ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
          ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}

      - name: Terraform validate
        working-directory: ./terraform
        run: terraform validate

      - name: Terraform plan
        working-directory: ./terraform
        run: terraform plan -var-file="$VAR_FILE" -out="tfplan"
        env:
          ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
          ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          VAR_FILE: ./env/test.tfvars

      - name: Terraform apply
        working-directory: ./terraform
        run: terraform apply "tfplan"
        env:
          ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
          ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}

  run-deploy-a:
    name: CD - A - Deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: Acceptance
      url: https://func-cu-ticketless-flow-a.azurewebsites.net
    needs:
      - run-deploy-t
    steps:

      - uses: actions/checkout@v3

      - name: Terraform init
        working-directory: ./terraform
        run: terraform init
        env:
          ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
          ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}

      - name: Terraform validate
        working-directory: ./terraform
        run: terraform validate

      - name: Terraform plan
        working-directory: ./terraform
        run: terraform plan -var-file="$VAR_FILE" -out="tfplan"
        env:
          ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
          ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          VAR_FILE: ./env/acceptance.tfvars

      - name: Terraform apply
        working-directory: ./terraform
        run: terraform apply "tfplan"
        env:
          ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
          ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}

  run-deploy-p:
    name: CD - P - Deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: Production
      url: https://func-cu-ticketless-flow-p.azurewebsites.net
    needs:
      - run-deploy-a
    steps:

      - uses: actions/checkout@v3

      - name: Terraform init
        working-directory: ./terraform
        run: terraform init
        env:
          ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
          ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}

      - name: Terraform validate
        working-directory: ./terraform
        run: terraform validate

      - name: Terraform plan
        working-directory: ./terraform
        run: terraform plan -var-file="$VAR_FILE" -out="tfplan"
        env:
          ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
          ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          VAR_FILE: ./env/production.tfvars

      - name: Terraform apply
        working-directory: ./terraform
        run: terraform apply "tfplan"
        env:
          ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
          ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        